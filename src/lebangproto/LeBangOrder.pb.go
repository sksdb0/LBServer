// Code generated by protoc-gen-go.
// source: LeBangOrder.proto
// DO NOT EDIT!

package lebangproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Order struct {
	Phone string       `protobuf:"bytes,1,opt,name=phone" json:"phone,omitempty"`
	Src   *UserAddress `protobuf:"bytes,2,opt,name=src" json:"src,omitempty"`
	Dst   *UserAddress `protobuf:"bytes,3,opt,name=dst" json:"dst,omitempty"`
	// 帮我买内容
	Content string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	// 商品类型
	Goodstype string `protobuf:"bytes,5,opt,name=goodstype" json:"goodstype,omitempty"`
	// 订单类型
	Distributiontype string `protobuf:"bytes,6,opt,name=distributiontype" json:"distributiontype,omitempty"`
	// 下单时间
	Ordertime int64 `protobuf:"varint,7,opt,name=ordertime" json:"ordertime,omitempty"`
	// 配送时间
	Deliverytime int64 `protobuf:"varint,8,opt,name=deliverytime" json:"deliverytime,omitempty"`
	// 订单状态
	Ordestatus int32 `protobuf:"varint,9,opt,name=ordestatus" json:"ordestatus,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Order) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Order) GetSrc() *UserAddress {
	if m != nil {
		return m.Src
	}
	return nil
}

func (m *Order) GetDst() *UserAddress {
	if m != nil {
		return m.Dst
	}
	return nil
}

func (m *Order) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Order) GetGoodstype() string {
	if m != nil {
		return m.Goodstype
	}
	return ""
}

func (m *Order) GetDistributiontype() string {
	if m != nil {
		return m.Distributiontype
	}
	return ""
}

func (m *Order) GetOrdertime() int64 {
	if m != nil {
		return m.Ordertime
	}
	return 0
}

func (m *Order) GetDeliverytime() int64 {
	if m != nil {
		return m.Deliverytime
	}
	return 0
}

func (m *Order) GetOrdestatus() int32 {
	if m != nil {
		return m.Ordestatus
	}
	return 0
}

type GetOrderRes struct {
	Order     []*Order `protobuf:"bytes,1,rep,name=order" json:"order,omitempty"`
	Errorcode string   `protobuf:"bytes,2,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (m *GetOrderRes) Reset()                    { *m = GetOrderRes{} }
func (m *GetOrderRes) String() string            { return proto.CompactTextString(m) }
func (*GetOrderRes) ProtoMessage()               {}
func (*GetOrderRes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetOrderRes) GetOrder() []*Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *GetOrderRes) GetErrorcode() string {
	if m != nil {
		return m.Errorcode
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "lebangproto.Order")
	proto.RegisterType((*GetOrderRes)(nil), "lebangproto.GetOrderRes")
}

func init() { proto.RegisterFile("LeBangOrder.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0xc7, 0xd9, 0xe6, 0x4b, 0xfb, 0x65, 0xe2, 0x41, 0x17, 0x0f, 0x8b, 0x88, 0x84, 0x9e, 0x96,
	0x1e, 0x72, 0xa8, 0x4f, 0xa0, 0x17, 0x2f, 0x82, 0xb2, 0xd0, 0x07, 0x48, 0xb2, 0x43, 0x0c, 0xd4,
	0xdd, 0xb0, 0x3b, 0x15, 0xfa, 0x6c, 0xbe, 0x9c, 0xec, 0x44, 0x49, 0x8b, 0x07, 0x8f, 0xff, 0xdf,
	0xfc, 0x66, 0x92, 0xfd, 0xc3, 0xd5, 0x33, 0x3e, 0x36, 0xae, 0x7f, 0x09, 0x16, 0x43, 0x3d, 0x06,
	0x4f, 0x5e, 0x96, 0x7b, 0x6c, 0x1b, 0xd7, 0x73, 0xb8, 0xf9, 0x9e, 0xbf, 0xa6, 0x30, 0xcd, 0xd7,
	0x9f, 0x0b, 0xc8, 0xd9, 0x97, 0xd7, 0x90, 0x8f, 0x6f, 0xde, 0xa1, 0x12, 0x95, 0xd0, 0x85, 0x99,
	0x82, 0xdc, 0x40, 0x16, 0x43, 0xa7, 0x16, 0x95, 0xd0, 0xe5, 0x56, 0xd5, 0x27, 0xd7, 0xea, 0x5d,
	0xc4, 0xf0, 0x60, 0x6d, 0xc0, 0x18, 0x4d, 0x92, 0x92, 0x6b, 0x23, 0xa9, 0xec, 0x2f, 0xd7, 0x46,
	0x92, 0x0a, 0x56, 0x9d, 0x77, 0x84, 0x8e, 0xd4, 0x3f, 0xfe, 0xde, 0x4f, 0x94, 0xb7, 0x50, 0xf4,
	0xde, 0xdb, 0x48, 0xc7, 0x11, 0x55, 0xce, 0xb3, 0x19, 0xc8, 0x0d, 0x5c, 0xda, 0x21, 0x52, 0x18,
	0xda, 0x03, 0x0d, 0xde, 0xb1, 0xb4, 0x64, 0xe9, 0x17, 0x4f, 0x97, 0x7c, 0x7a, 0x1a, 0x0d, 0xef,
	0xa8, 0x56, 0x95, 0xd0, 0x99, 0x99, 0x81, 0x5c, 0xc3, 0x85, 0xc5, 0xfd, 0xf0, 0x81, 0xe1, 0xc8,
	0xc2, 0x7f, 0x16, 0xce, 0x98, 0xbc, 0x03, 0x48, 0x0b, 0x91, 0x1a, 0x3a, 0x44, 0x55, 0x54, 0x42,
	0xe7, 0xe6, 0x84, 0xac, 0x77, 0x50, 0x3e, 0x21, 0x71, 0x7f, 0x06, 0xa3, 0xd4, 0x90, 0xf3, 0x7d,
	0x25, 0xaa, 0x4c, 0x97, 0x5b, 0x79, 0x56, 0xc1, 0x64, 0x4d, 0x42, 0xfa, 0x35, 0x0c, 0xc1, 0x87,
	0xce, 0x5b, 0xe4, 0x72, 0x0b, 0x33, 0x83, 0x76, 0xc9, 0x1b, 0xf7, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xfe, 0x14, 0xbd, 0xd3, 0xd0, 0x01, 0x00, 0x00,
}
